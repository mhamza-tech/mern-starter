{
  "name": "unreal-gql",
  "version": "0.8.0",
  "description": "Unreal GraphQL Server",
  "readmeFilename": "README.md",
  "license": "UNLICENSED",
  "main": "./dist/index.js",
  "author": {
    "name": "Rob Alderman",
    "email": "rob@unreal.fun"
  },
  "repository": {
    "type": "git",
    "url": "https://gitlab.com/unrealfun/be/unreal-gql.git"
  },
  "bugs": {
    "url": "https://gitlab.com/unrealfun/be/unreal-gql.git/issues"
  },
  "engines": {
    "node": "12.16.1"
  },
  "husky": {
    "hooks": {
      "post-merge": "./after-merge.sh || true",
      "pre-commit": "tsc -p src/tsconfig.json --noEmit && lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": "eslint --cache"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "^1.15.3",
    "@graphql-codegen/typescript": "^1.15.3",
    "@types/airtable": "^0.8.0",
    "@types/aws-lambda": "^8.10.57",
    "@types/bluebird": "^3.5.32",
    "@types/bull": "^3.14.0",
    "@types/chai": "^4.2.11",
    "@types/chai-subset": "^1.3.3",
    "@types/chalk": "^2.2.0",
    "@types/faker": "^4.1.12",
    "@types/graphql": "^14.5.0",
    "@types/hapi__joi": "^17.1.2",
    "@types/jest": "^26.0.0",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/lodash": "^4.14.155",
    "@types/node": "^14.0.13",
    "@types/remove-markdown": "^0.1.1",
    "@types/showdown": "^1.9.3",
    "@typescript-eslint/eslint-plugin": "^3.3.0",
    "@typescript-eslint/parser": "^3.3.0",
    "airtable": "^0.8.1",
    "chai": "^4.2.0",
    "chai-exclude": "^2.0.2",
    "chai-subset": "^1.6.0",
    "commander": "^5.1.0",
    "concurrently": "^5.2.0",
    "dirty-chai": "^2.0.1",
    "husky": "^4.2.5",
    "jest": "^26.0.1",
    "lint-staged": "^10.2.11",
    "mocha": "^8.0.1",
    "onchange": "^7.0.2",
    "open": "^7.0.4",
    "ts-jest": "^26.1.0",
    "ts-node": "^8.10.2",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.9.5"
  },
  "dependencies": {
    "@apollo/federation": "^0.16.7",
    "@firebase/app": "^0.6.5",
    "@firebase/app-types": "^0.6.1",
    "@hapi/joi": "^17.1.1",
    "@sendgrid/mail": "^7.2.0",
    "@sentry/integrations": "^5.18.1",
    "@sentry/node": "^5.18.1",
    "@types/mixpanel": "^2.14.2",
    "apollo-cache-inmemory": "^1.6.6",
    "apollo-client": "^2.6.10",
    "apollo-link": "^1.2.14",
    "apollo-link-context": "^1.0.20",
    "apollo-link-http": "^1.5.17",
    "apollo-link-ws": "^1.0.20",
    "apollo-server": "^2.14.5",
    "apollo-server-express": "2.14.5",
    "aws-sdk": "^2.698.0",
    "axios": "^0.19.2",
    "bcryptjs": "^2.4.3",
    "bluebird": "^3.7.2",
    "body-parser": "^1.19.0",
    "bull": "^3.14.0",
    "chalk": "^4.1.0",
    "contentful": "^7.14.4",
    "dataloader": "^2.0.0",
    "deep-equal-in-any-order": "^1.0.27",
    "dotenv": "^8.2.0",
    "dotenv-flow": "^3.1.0",
    "eslint": "^7.2.0",
    "faker": "^4.1.0",
    "firebase-admin": "^8.12.1",
    "graphql": "^15.1.0",
    "graphql-extensions": "^0.12.3",
    "graphql-iso-date": "^3.6.1",
    "graphql-redis-subscriptions": "^2.2.1",
    "graphql-resolvers": "^0.4.2",
    "graphql-subscriptions": "^1.1.0",
    "graphql-tag": "^2.10.3",
    "graphql-tag-pluck": "^0.8.7",
    "graphql-tools": "^6.0.10",
    "graphql-type-json": "^0.3.2",
    "handlebars": "^4.7.6",
    "handy-redis": "^1.8.3",
    "imgix-core-js": "^2.3.1",
    "infer-gender": "^1.4.1",
    "jsonwebtoken": "^8.5.1",
    "kill-port": "^1.6.0",
    "lodash": "^4.17.15",
    "merge-graphql-schemas": "^1.7.8",
    "mixin-deep": "^2.0.1",
    "mixpanel": "^0.11.0",
    "module-alias": "^2.2.2",
    "moment": "^2.26.0",
    "node-cache": "^5.1.1",
    "node-fetch": "^2.6.0",
    "pg": "^8.2.1",
    "pg-promise": "^10.5.6",
    "pgtools": "^0.3.0",
    "promised-handlebars": "^2.0.1",
    "randomstring": "^1.1.5",
    "redis": "^3.0.2",
    "reflect-metadata": "^0.1.13",
    "remove-markdown": "^0.3.0",
    "showdown": "^1.9.1",
    "source-map-support": "^0.5.19",
    "start-server-and-test": "^1.11.0",
    "subscriptions-transport-ws": "^0.9.16",
    "systeminformation": "^4.26.9",
    "typeorm": "^0.2.25",
    "typeorm-loader": "0.0.1-0.5",
    "typeorm-seed": "^0.1.6",
    "uuid": "^8.1.0",
    "validator": "^13.1.1",
    "ws": "^7.3.0",
    "yamljs": "^0.3.0"
  },
  "scripts": {
    "loc": "find src -name '*.ts' | xargs wc -l",
    "verify": "npm run build && eslint --cache '{bin,src}/**/*.ts'",
    "lint": "eslint --cache '{bin,src}/**/*.ts'",
    "lint-fix": "npm run lint -- --fix",
    "postinstall": "npm run build",
    "watch": "npm run build -- -w",
    "apollo_graph_manager": "npx apollo service:push --endpoint=https://gql-dev.unreal.fun/",
    "dev-jeff-configs": "node -r ts-node/register -r dotenv/config src/index.ts dotenv_config_path=.env.jeff.local",
    "build": "tsc -p ./src/tsconfig.json",
    "build.dev": "npm run build -- --incremental --assumeChangesOnlyAffectDirectDependencies",
    "build.dev.watch": "npm run build.dev -- -w",
    "watch.server": "onchange -i -k 'dist/**' -- npm run start",
    "start": "node -r dotenv/config -r source-map-support/register ./dist/index.js",
    "start.dev": "npm run build.dev && concurrently -k -r \"npm run build.dev.watch\" \"npm run watch.server\"",
    "test": "TS_NODE_TRANSPILE_ONLY=true node -r dotenv/config -r ts-node/register node_modules/.bin/jest",
    "test.cov": "npm run test -- --coverage",
    "test.watch": "npm run test -- --watch",
    "test-live-single-test": "npm run test-live -- --grep authService:me",
    "test-live": "TEST_LIVE=true; ./node_modules/.bin/_mocha -require ts-node/register -require dotenv/config --exit --config .mocharc.js",
    "test-dev:cli": "./node_modules/.bin/_mocha -require ts-node/register -require dotenv/config --exit --config .mocharc.js",
    "test-simulate-cicd:cli": "npm run build && npm run test-cicd",
    "test-cicd": "./node_modules/.bin/_mocha -require dotenv/config dotenv_config_path=.env.cicd --exit -config .mocharc-cicd.js",
    "typeorm": "TS_NODE_TRANSPILE_ONLY=true TS_NODE_PROJECT=src/tsconfig.json node -r ts-node/register -r dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli",
    "typeorm:cli": "TS_NODE_TRANSPILE_ONLY=true TS_NODE_PROJECT=src/tsconfig.json node -r ts-node/register -r dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli",
    "typeorm:gen": "TS_NODE_TRANSPILE_ONLY=true TS_NODE_PROJECT=src/tsconfig.json node -r ts-node/register -r dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli migration:generate ",
    "graphql-codegen": "graphql-codegen && eslint --cache 'src/gql-types.ts' --fix",
    "exec-ts": "TS_NODE_TRANSPILE_ONLY=true TS_NODE_PROJECT=src/tsconfig.json node -r ts-node/register -r dotenv/config",
    "sync-strings": "npm run exec-ts -- bin/airtable/sync-strings.ts",
    "sync-items": "npm run exec-ts -- bin/airtable/sync-items.ts",
    "sync-moves": "npm run exec-ts -- bin/airtable/sync-moves.ts",
    "sync-states": "npm run exec-ts -- bin/airtable/sync-states.ts",
    "sync-assets": "npm run exec-ts -- bin/airtable/sync-assets.ts",
    "sync-vstates": "npm run exec-ts -- bin/airtable/sync-vstates.ts",
    "sync-colors": "npm run exec-ts -- bin/airtable/sync-colors.ts",
    "sync-states-to-vstates": "npm run exec-ts -- bin/airtable/sync-states-to-vstates.ts",
    "sync-smart-cards": "npm run exec-ts -- bin/airtable/sync-smart-cards.ts",
    "sync-npcs": "npm run exec-ts -- bin/airtable/sync-npcs.ts",
    "sync-color-combos": "npm run exec-ts -- bin/airtable/sync-color-combos.ts",
    "sync-hashtributes": "npm run exec-ts -- bin/airtable/sync-hashtributes.ts",
    "sync-game-logic": "npm run exec-ts -- bin/airtable/sync-game-logic.ts",
    "sync-modifiers": "npm run exec-ts -- bin/airtable/sync-modifiers.ts",
    "sync-fake-users": "npm run exec-ts -- bin/airtable/sync-fake-users.ts",
    "sync-airtable": "concurrently -m 4 npm:sync-colors npm:sync-color-combos npm:sync-assets npm:sync-hashtributes npm:sync-vstates npm:sync-items npm:sync-moves npm:sync-modifiers npm:sync-npcs npm:sync-states npm:sync-states-to-vstates npm:sync-smart-cards npm:sync-strings npm:sync-game-logic npm:sync-fake-users",
    "replace-airtable": "npm run exec-ts -- bin/airtable/replace.ts",
    "imgix-test": "npm run exec-ts -- src/maker/imgix-test.ts"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.1",
    "utf-8-validate": "^5.0.2"
  }
}
